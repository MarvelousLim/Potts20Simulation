(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     29684,        696]
NotebookOptionsPosition[     28845,        673]
NotebookOutlinePosition[     29278,        690]
CellTagsIndexPosition[     29235,        687]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "40"}], ";", 
  RowBox[{"m", "=", "40"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "c", ",", "s", ",", "c2", ",", "s2", ",", "x", ",", 
    "z", ",", "coef", ",", "z1", ",", "z2", ",", "z3", ",", "z4"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"acc", "=", 
    RowBox[{"Floor", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       RowBox[{"n", " ", "m", " ", 
        RowBox[{
         RowBox[{"Log", "[", "2", "]"}], "/", 
         RowBox[{"Log", "[", "10", "]"}]}]}], "]"}], " ", "1.5"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"z1", "=", 
   RowBox[{
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"n", "/", "2"}]}], "-", "1"}], ")"}]}], " ", 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"c2", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"n", "-", "1"}], ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z2", "=", 
   RowBox[{
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"n", "/", "2"}]}], "-", "1"}], ")"}]}], " ", 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"s2", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"n", "-", "1"}], ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"z3", "=", 
   RowBox[{
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", " ", 
        RowBox[{"n", "/", "2"}]}], "-", "1"}], ")"}]}], 
    RowBox[{"c", "[", "0", "]"}], " ", 
    RowBox[{"c", "[", "n", "]"}], " ", 
    RowBox[{"Product", "[", 
     RowBox[{
      RowBox[{"c2", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "2", ",", 
        RowBox[{"n", "-", "2"}], ",", "2"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"z4", "=", 
    RowBox[{
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"m", " ", 
         RowBox[{"n", "/", "2"}]}], "-", "1"}], ")"}]}], 
     RowBox[{"s", "[", "0", "]"}], " ", 
     RowBox[{"s", "[", "n", "]"}], " ", 
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"s2", "[", "k", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "2", ",", 
         RowBox[{"n", "-", "2"}], ",", "2"}], "}"}]}], "]"}]}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "0", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "^", "m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", 
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}]}], ")"}], "^", "m"}]}], ")"}], "/", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{"m", "/", "2"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "[", "0", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "x"}], ")"}], "^", "m"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", 
         RowBox[{"(", 
          RowBox[{"1", "+", "x"}], ")"}]}], ")"}], "^", "m"}]}], ")"}], "/", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{"m", "/", "2"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c", "[", "n", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "^", "m"}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", 
         RowBox[{"(", 
          RowBox[{"1", "-", "x"}], ")"}]}], ")"}], "^", "m"}]}], ")"}], "/", 
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{"m", "/", "2"}], ")"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", "n", "]"}], "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "x"}], ")"}], "^", "m"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", 
          RowBox[{"(", 
           RowBox[{"1", "-", "x"}], ")"}]}], ")"}], "^", "m"}]}], ")"}], "/", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"m", "/", "2"}], ")"}]}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", 
    RowBox[{"2", "x", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "2"}]}], ")"}]}]}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", "k_", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"x", "^", "2"}]}], ")"}], "^", "2"}], "-", 
    RowBox[{"b", " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"Pi", " ", 
       RowBox[{"k", "/", "n"}]}], "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"c2", "[", "k_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "m"}]}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{"m", ",", "j"}], "]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "k", "]"}], "^", "2"}], "-", 
            RowBox[{"b", "^", "2"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"j", "/", "2"}], ")"}]}], " ", 
         RowBox[{
          RowBox[{"a", "[", "k", "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"m", "-", "j"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "m", ",", "2"}], "}"}]}], "]"}], "+", 
      RowBox[{"b", "^", "m"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s2", "[", "k_", "]"}], "=", 
   RowBox[{
    RowBox[{"2", "^", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"2", "m"}]}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{"m", ",", " ", "j"}], "]"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "[", "k", "]"}], "^", "2"}], "-", 
            RowBox[{"b", "^", "2"}]}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"j", "/", "2"}], ")"}]}], " ", 
         RowBox[{
          RowBox[{"a", "[", "k", "]"}], "^", 
          RowBox[{"(", 
           RowBox[{"m", "-", "j"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "0", ",", "m", ",", "2"}], "}"}]}], "]"}], "-", 
      RowBox[{"b", "^", "m"}]}], ")"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"z", "=", 
    RowBox[{"Rationalize", "[", 
     RowBox[{"Chop", "[", 
      RowBox[{"Expand", "[", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"z1", "+", "z2", "+", "z3", "+", "z4"}], ",", "acc"}], "]"}],
        "]"}], "]"}], "]"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"coef", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", " ", "n"}], "+", "1"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"coef", "[", 
       RowBox[{"[", 
        RowBox[{"j", "+", "1"}], "]"}], "]"}], "=", 
      RowBox[{"Coefficient", "[", 
       RowBox[{"z", ",", "x", ",", 
        RowBox[{"2", "j"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"m", " ", "n"}]}], "}"}]}], "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Apply", "[", 
      RowBox[{"Plus", ",", "coef"}], "]"}], "\[NotEqual]", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{"n", " ", "m"}], ")"}]}]}], ",", 
    RowBox[{
    "Print", "[", 
     "\"\<Error in calculation: Sum of coefficients incorrect.\>\"", "]"}], 
    ",", 
    RowBox[{"Print", "[", "coef", "]"}]}], "]"}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.825334307738799*^9, 3.8253343077397966`*^9}, {
  3.825335070577799*^9, 3.8253351005969696`*^9}, {3.8253359491758432`*^9, 
  3.8253359570415244`*^9}, {3.8253360595063624`*^9, 3.8253360601174707`*^9}, {
  3.8253361360289164`*^9, 3.825336163074866*^9}, {3.8253362558951855`*^9, 
  3.825336258188942*^9}, {3.825336288291692*^9, 3.825336304864894*^9}, {
  3.825336979760191*^9, 3.8253370325349197`*^9}, {3.82533709581055*^9, 
  3.8253371232593174`*^9}, {3.8253371732878575`*^9, 3.825337188618375*^9}, {
  3.8253372888728294`*^9, 3.825337289855969*^9}, {3.825338702925837*^9, 
  3.825338705701338*^9}},
 CellLabel->
  "In[1284]:=",ExpressionUUID->"044ab66b-b6ed-4b4e-b85e-83d865c468de"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Log", "[", "coef", "]"}], " ", "-", " ", 
   RowBox[{"n", " ", "m", " ", 
    RowBox[{"Log", "[", "2", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8253390370726585`*^9, 3.8253390873840027`*^9}, {
  3.8253402392919645`*^9, 3.8253402435642805`*^9}, {3.8253463520029783`*^9, 
  3.8253463881980724`*^9}, {3.8253485149254217`*^9, 3.825348537621292*^9}, {
  3.825348608230131*^9, 3.825348702288464*^9}},
 CellLabel->
  "In[1377]:=",ExpressionUUID->"bd784718-3bdc-4c2f-8e64-5a9a4c90bfe4"],

Cell[BoxData[
 GraphicsBox[{{}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
    AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
uv9ny9D9wfYM3T+0Y+j+YjeG7j/aM3R/si9D9y+5DN3fdGDo/qcjQ/dHhzN0
/5TH0P1VZ4buv7owdH/WlaH7t8DQ/V13hu7/ejB0f9iLofvHfIbuL/sxdP85
gKH704HMT/vXDN3fDmbo/nc4Q/fHIxm6fy5k6P56PEP330UM3Z9PY+j+vZih
+/sShu7/SxlaHyBjaP0Aw9D6AhVD6w90DK1P2MDQ+gU9Q+sbyhha/1DO0PqI
3QytnzAwtL7iIEPrLyoYWp9xnKH1G0aG1ndUMrT+o4qh9SHVDK0fMTG0vqSG
ofUntQytT3nA0PoVM0PrW54wtP6ljqH1MfUMrZ+xMLS+poGh9TeNDK3P+cbQ
+h2OnNb32Mhp/Y+tnNYHtZfT+iE7Oa0v6ian9Uf2clqf1FdO65e4clrf5CCn
9U+OclofNVxO66d4clpf5Syn9Vcuclqf5Sr/qX5LTuu73OW0/stDTuvDvOS0
fowvp/VlfnJafxYgp/VpgXJavyaQ0/q2YDmtfwuX0/q4SDmtnxPKaX1dvJzW
34nktD4vTU7r98RyWt8nkdP6P6mc1gfK5LR+kJHT+kKVnNYf6uS0PnGDnNYv
6uW0vrFMTusfy+W0PnK3nNZPGuS0vvKgnNZfVshpfeZxOa3fNMppfWelnNZ/
VslpfWi1nNaPmuS0vrRGTutPa+W0PvWBnNavmuW0vvWJnNa/1slpfWy9nNbP
WuS0vrZBTutvG+W0PvebnNbvchS0vtdGQet/bRW0Pri9gtYP2ylofXE3Ba0/
tlfQ+uS+Clq/zFXQ+mYHBa1/dlTQ+ujhClo/zVPQ+mpnBa2/dlHQ+mxXxU/1
2wpa3+2uoPXfHgpaH+6loPXjfAWtL/dT0PrzAAWtTw9U0Pp1gYLWtwcraP17
uILWx0cqaP28UEHr6+MVtP5epKD1+WkKWr8vVtD6fomC1v9LFbQ/QKag/QOM
gvYXqBS0/0CnoP0JGxS0f0GvoP0NZQra/1CuoP0RuxW0f8KgoP0VBxW0/6JC
Qfszjito/4ZRQfs7KhW0/6NKQftDqhW0f8SkoP0lNQraf1KroP0pDxS0f8Ws
oP0tTxS0/6VOQftj6hW0f8aioP01DQraf9OooP053xS0f4ejpP09Nkra/2Or
pP1B7ZW0f8hOSfuLuilp/5G9kvYn9VXS/iWukvY3OShp/5OjkvZHDVfS/ime
kvZXOStp/5WLkvZnuSp/6t9S0v4udyXt//JQ0v4wLyXtH+MraX+Zn5L2nwUo
aX9aoJL2rwmUtL8tWEn738KVtD8uUkn754RK2l8Xr6T9dyIl7c9LU9L+PbGS
9vdJlLT/T6qk/YEyJe0fZJS0v1ClpP2HOiXtT9ygpP2LeiXtbyxT0v7HciXt
j9ytpP2TBiXtrzyopP2XFUran3lcSfs3jUra31mppP2fVUraH1qtpP2jJiXt
L61R0v7TWiXtT32gpP2rZiXtb32ipP2vdUraH1uvpP2zFiXtr21Q0v7bRiXt
z/2mpP27HBXt77VR0f5fWxXtD26vov3DdiraX9xNRfuP7VW0P7mvivYvc1W0
v9lBRfufHVW0P3q4ivZP81S0v9pZRfuvXVS0P9tV9VP/tor2d7uraP+3h4r2
h3upaP84X0X7y/1UtP88QEX70wNVtH9doKL97cEq2v8erqL98ZEq2j8vVNH+
+ngV7b8XqWh/fpqK9u+LVbS/X6Ki/f9SFc0HkKlofgCjovkCKhXNH9CpaD7B
BhXNL9CraL5BmYrmH5SraD7CbhXNTzCoaL7CQRXNX6hQ0XyG4yqa32BU0XyH
ShXNf6hS0XyIahXNjzCpaL5EjYrmT9SqaD7FAxXNrzCraL7FExXNv6hT0XyM
ehXNz7CoaL5Gg4rmbzSqaD7HNxXN7+Coab6HjZrmf9iqaT5IezXND7FT03yR
bmqaP2KvpvkkfdU0v4SrpvkmDmqaf+Kopvkow9U0P4Wnpvkqzmqav+Kipvks
rmqa3wJqmu/irqb5Lx5qmg/jpab5MXw1zZfxU9P8mQA1zacJVNP8GoGa5tsE
q2n+Tbia5uNEqml+jlBN83Xi1TR/R6Sm+Txp6p/ye9Q030eipvk/UjXNB5Kp
aX4Qo6b5Qio1zR/SqWk+0QY1zS/Sq2m+UZma5h+Vq2k+0m41zU8yqGm+0kE1
zV+qUNN8puNqmt9kVNN8p0o1zX+qUtN8qGo1zY8yqWm+VI2a5k/Vqmk+1QM1
za8yq2m+1RM1zb+qU9N8rHo1zc+yqGm+VoOa5m81qmk+1zc1ze/iaGi+l42G
5n/Zamg+WHsNzQ+z09B8sW4amj9mr6H5ZH01NL+Mq6H5Zg4amn/mqKH5aMM1
ND+Np6H5as4amr/moqH5bK4amt8GGprv5q6h+W8eGpoP56Wh+XF8Dc2X89PQ
/LkADc2nC9TQ/DqBhubbBWto/l24hubjRWpofp5QQ/P14jU0f0+kofl8aZqf
8vs0NN9PoqH5f1INzQeUaWh+IKOh+YIqDc0f1GloPuEGDc0v1GtovmGZhuYf
lmtoPuJuDc1PNGhovuJBDc1frNDQfMbjGprfaNTQfMdKDc1/rNLQfMhqDc2P
NGlovmSNhuZP1mpoPuUDDc2vNGtovuUTDc2/rNPQfMx6Dc3PtGhovmaDhuZv
NmpoPuc3Dc3v5GhpvqeNluZ/2mppPmh7Lc0PtdPSfNFuWpo/aq+l+aR9tTS/
lKul+aYOWpp/6qil+ajDtTQ/lael+arOWpq/6qKl+ayuWprfClqa7+qupfmv
HlqaD+ulpfmxfC3Nl/XT0vzZAC3Npw3U0vxagZbm2wZraf5tuJbm40ZqaX6u
UEvzdeO1NH9XpKX5vGlamt8r1tJ8X4mW5v9KtTQfWKal+cGMluYLq7Q0f1in
pfnEG7Q0v1ivpfnGZVqaf1yupfnIu7U0P9mgpfnKB7U0f7lCS/OZj2tpfrNR
S/OdK7U0/7lKS/Ohq7U0P9qkpfnSNVqaP12rpfnUD7Q0v9qspfnWT7Q0/7pO
S/Ox67U0P9uipfnaDVqav92opfnc37Q/5XfraL63jY7mf9vqaD54ex3ND7fT
0XzxbjqaP26vo/nkfXU0v5yro/nmDjqaf+6oo/now3U0P52no/nqzjqav+6i
o/nsrjqa3w46mu/urqP57x46mg/vpaP58XwdzZf309H8+QAdzacP1NH8eoGO
5tsH62j+fbiO5uNH6mh+vlBH8/XjdTR/X6Sj+fxpOprfL9bRfH+Jjub/S3X0
+QAyHX1+AKOjzxdQ6ejzB3Q6+nyCDTr6/AK9jj7foExHn39QrqPPR9ito89P
MOjo8xUO6ujzFyp09PkMx3X0+Q1GHX2+Q6WOPv+hSkefD1Gto8+PMOno8yVq
dPT5E7U6+nyKBzr6/Aqzjj7f4omOPv+iTkefj1Gvo8/PsOjo8zUadPT5G406
+nyObzr6/A6btcA+3+P/AHOlgqY=
     "]]}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 1601.}, {-1108.3423417153526`, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8253496015686827`*^9},
 CellLabel->
  "Out[1377]=",ExpressionUUID->"da76fdae-50dc-488d-9b14-038538b5962f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"OpenWrite", "[", "\"\<2DIsing_DOS_L40.txt\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", "\[LessEqual]", 
      RowBox[{"Length", "@", "coef"}]}], ",", 
     RowBox[{"i", "++"}], " ", ",", 
     RowBox[{"Write", "[", 
      RowBox[{"s", ",", 
       RowBox[{"N", "@", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Log", "[", "coef", "]"}], " ", "-", " ", 
           RowBox[{"n", " ", "m", " ", 
            RowBox[{"Log", "[", "2", "]"}]}]}], ")"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Close", "[", "s", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.825348745535907*^9, 3.8253488986455727`*^9}, {
  3.825349100074727*^9, 3.8253491001993766`*^9}, {3.825349133594062*^9, 
  3.8253491371033382`*^9}, {3.825349183574973*^9, 3.825349259597805*^9}, {
  3.825349290236224*^9, 3.8253493690513997`*^9}, {3.825349584748489*^9, 
  3.825349617994152*^9}, {3.8253496783852406`*^9, 3.8253497173578844`*^9}},
 CellLabel->
  "In[1390]:=",ExpressionUUID->"ffb29afc-7e74-4492-a454-de1c0d5c5dad"],

Cell[BoxData["\<\"2DIsing_DOS_L40.txt\"\>"], "Output",
 CellChangeTimes->{
  3.825348766969206*^9, {3.8253487972623944`*^9, 3.8253488246143675`*^9}, {
   3.8253488589101343`*^9, 3.8253488674973545`*^9}, 3.825349180564438*^9, 
   3.825349380308895*^9, 3.8253494639262657`*^9, {3.8253495109032745`*^9, 
   3.825349538194569*^9}, {3.8253496107777014`*^9, 3.825349620129609*^9}, {
   3.825349680716611*^9, 3.8253497194620914`*^9}},
 CellLabel->
  "Out[1392]=",ExpressionUUID->"d98fe984-a92c-474d-99d7-4faf4399dc9c"]
}, Open  ]]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
Magnification:>1.3 Inherited,
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8d7a40d4-ac21-4552-b6b0-4b0a0571570c"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 8865, 292, 949, "Input",ExpressionUUID->"044ab66b-b6ed-4b4e-b85e-83d865c468de"],
Cell[CellGroupData[{
Cell[9448, 316, 551, 11, 57, "Input",ExpressionUUID->"bd784718-3bdc-4c2f-8e64-5a9a4c90bfe4"],
Cell[10002, 329, 16985, 295, 296, "Output",ExpressionUUID->"da76fdae-50dc-488d-9b14-038538b5962f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27024, 629, 1291, 31, 176, "Input",ExpressionUUID->"ffb29afc-7e74-4492-a454-de1c0d5c5dad"],
Cell[28318, 662, 511, 8, 43, "Output",ExpressionUUID->"d98fe984-a92c-474d-99d7-4faf4399dc9c"]
}, Open  ]]
}
]
*)

